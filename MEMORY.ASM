;----------------------------------------------------------------------------
; 6502 memory stuff
;----------------------------------------------------------------------------
        .386p
code    segment public use32
        assume cs:code,ds:code

        include 6502.h
        include equates.h
        include debug.h
        include file.h
        include data.h
        include ppu.h
        include empty.h

        public  empty_R
        public  empty_W
        public  void
        public  ram_R
        public  sram_R
        public  ram_W
        public  sram_W
        public  rom_R
;----------------------------------------------------------------------------
empty_R:;       read invalid memory address (error)
;----------------------------------------------------------------------------
if DEBUG
        or [int_flags],DEBUG2                   ;enter debugger
        mov [debugmsg],offset msg43             ;bad read debug msg
endif
 mov al,0
        ret
;----------------------------------------------------------------------------
empty_W:;       write invalid memory address (error)
;----------------------------------------------------------------------------
if DEBUG
        or [int_flags],DEBUG2                   ;enter debugger
        mov [debugmsg],offset msg44             ;bad write debug msg
endif
        ret
;----------------------------------------------------------------------------
void:;          empty function
;----------------------------------------------------------------------------
        ret
;----------------------------------------------------------------------------
ram_R:;         ram read ($0000-$1FFF)
;----------------------------------------------------------------------------
        and edi,07ffh
        mov al,fs:[edi]
        ret
;----------------------------------------------------------------------------
ram_W:;         ram write ($0000-$1FFF)
;----------------------------------------------------------------------------
        and edi,07ffh
        mov fs:[edi],al
        ret
;----------------------------------------------------------------------------
sram_R:;        sram read ($6000-$7FFF)
;----------------------------------------------------------------------------
        mov al,fs:[edi]
        ret
;----------------------------------------------------------------------------
sram_W:;        sram write ($6000-$7FFF)
;----------------------------------------------------------------------------
        mov fs:[edi],al
        ret
;----------------------------------------------------------------------------
rom_R:;         rom read ($8000-$FFFF)
;----------------------------------------------------------------------------
        mov eax,edi
        shr eax,13
        mov eax,[memmap+eax*4]
        mov al,[edi+eax]
        ret
;----------------------------------------------------------------------------
code    ends
        end
